#--------------------------------------------------------------------------------
# Crate kubeconfig file (overwritten if exists)
#--------------------------------------------------------------------------------
#- name: "Revoke certificates if any before cleaining up ~/.kube directory"
#  shell: |
#    for crt in $(ls *.crt) ; do openssl ca -config {{ K8S_CA_HOME }}/openssl.conf -revoke "${crt}"; done
#  args:
#    chdir: "~{{ item.account }}/.kube/"
#  ignore_errors: true
#  with_items: "{{ k8s_users }}"

- name: "Remove ~{{ item.account }}/.kube"
  file:
    path:     "~{{ item.account }}/.kube"
    state:    "absent"
  with_items: "{{ k8s_users }}"

- name: "Create ~/.kube"
  file:
    path:     "~{{ item.account }}/.kube"
    state:    "directory"
    owner:    "{{ item.account }}"
    group:    "{{ K8S_GROUP }}"
    mode:     "0700"
  with_items: "{{ k8s_users }}"

- name: "Change owner of .kube/config/config"
  file:
    path:     "~{{ item.account }}/.kube/config"
    state:    "touch"
    owner:    "{{ item.account }}"
    group:    "{{ K8S_GROUP }}"
    mode:     "0600"
  with_items: "{{ k8s_users }}"

#--------------------------------------------------------------------------------
# Create CSR
#--------------------------------------------------------------------------------
- name: "create CSR"
  become: true
  become_user: "{{ item.account }}"
  shell: |
    openssl genrsa -out {{ item.kubeuser }}.key 2048
    openssl req -new -batch -key {{ item.kubeuser }}.key -out {{ item.kubeuser }}.csr -subj "{{ item.cert_subject }}"
  args:
    chdir: "~{{ item.account }}/.kube"
  with_items: "{{ k8s_users }}"

#--------------------------------------------------------------------------------
# Sign CSR
#--------------------------------------------------------------------------------
- name: "Sign CSR"
  shell: |
    openssl ca -config {{ K8S_CA_HOME }}/openssl.conf -batch -extensions ssl_client -in {{ item.kubeuser }}.csr -out {{ item.kubeuser }}.crt
  args:
    chdir: "~{{ item.account }}/.kube/"
  with_items: "{{ k8s_users }}"

- name: "Change owner of the client certificate"
  file:
    path:   "~{{ item.account }}/.kube/{{ item.kubeuser }}.crt"
    state:  "file"
    owner:  "{{ item.account }}"
    group:  "{{ K8S_GROUP }}"
    mode:   "0600"
  with_items: "{{ k8s_users }}"

#--------------------------------------------------------------------------------
# Update kubeconfig to set certificate.
#--------------------------------------------------------------------------------
- name: "Update kubeconfig to set client cert"
  become: true
  become_user: "{{ item.account }}"
  shell: |
    export KUBECONFIG=~{{ item.account }}/.kube/config
    kubectl config set-credentials '{{ item.kubeuser }}' --client-certificate='{{ item.kubeuser }}.crt' --client-key='{{ item.kubeuser }}.key'
    kubectl config set-context '{{ item.kubeuser }}@{{ item.cluster }}' --cluster='{{ item.cluster }}' --namespace='{{ item.namespace }}' --user='{{ item.kubeuser }}'
    kubectl config use-context '{{ item.kubeuser }}@{{ item.cluster }}'
  args:
    chdir: "~{{ item.account }}/.kube"
  register: _result_set_context
  with_items: "{{ k8s_users }}"

- fail:
    msg: "{{ item.stderr }}"
  when: item.stderr.find("error") != -1
  with_items: "{{ _result_set_context.results }}"

#--------------------------------------------------------------------------------
# Update kubeconfig to set cluster.
# KUBECONFIG=config force kubectl to use the one in PWD not that of root/.kube/.
#--------------------------------------------------------------------------------
- name: "Update kubeconfig to set cluster"
  shell: >
    KUBECONFIG=~{{ item.account }}/.kube/config
    kubectl config set-cluster {{ item.cluster }}
    --server={{ APISERVER_PROTOCOL }}://{{ K8S_MASTER_HOSTNAME }}:{{ APISERVER_PORT }}
    --embed-certs=true
    --certificate-authority={{ K8S_CA_HOME }}/ca.crt
#  args:
#    chdir: "~{{ item.account }}/.kube"
  with_items: "{{ k8s_users }}"
  register: _result_set_cluster

- fail:
    msg: "{{ item.stderr }}"
  when: item.stderr.find("error") != -1
  with_items: "{{ _result_set_cluster.results }}"


