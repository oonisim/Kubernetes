#jinja2: lstrip_blocks: "True", trim_blocks: "True"
#--------------------------------------------------------------------------------
# Mount /etc/dd-agent/conf.d/kubernetes.yaml as config map.
#--------------------------------------------------------------------------------
kind: ConfigMap
apiVersion: v1
metadata:
  name: dd-agent-config
  namespace: default
data:
  kubernetes-config: |
    init_config:
    instances:
      - port: {{ CADVISOR_PORT }}
        enabled_gauges:
        - cpu.*
        - filesystem.*
        - memory.*
        - network.tcp6.*
        apiserver_client_crt: {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ APISERVER_CLIENT_CRT|basename }}
        apiserver_client_key: {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ APISERVER_CLIENT_KEY|basename }}
        apiserver_ca_cert:    {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ APISERVER_CA_CRT|basename }}
        kubelet_client_crt:   {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ KUBELET_CLIENT_CRT|basename }}
        kubelet_client_key:   {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ KUBELET_CLIENT_KEY|basename }}
        kubelet_cert:         {{ DD_AGENT_CERT_MOUNT_PATH }}/{{ KUBELET_CA_CRT|basename }}
    tags:
      - dd-agent:true

---
#--------------------------------------------------------------------------------
# Datadog K8S daemonset generated with Ansible
# https://app.datadoghq.com/account/settings#agent/kubernetes
#--------------------------------------------------------------------------------
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: dd-agent
spec:
  template:
    metadata:
      labels:
        app: dd-agent
      name: dd-agent
    spec:
      nodeSelector:
#        node_type: mule-non-prod
      containers:
      - image: datadog/docker-dd-agent:latest
        imagePullPolicy: Always
        name: dd-agent
        ports:
          - containerPort: 8125
            name: dogstatsdport
            protocol: UDP
        env:
          - name: TAGS
            value: "{{ DATADOG_TAGS }}"
          - name: API_KEY
            value: "{{ DATADOG_API_KEY }}"
          - name: KUBERNETES
            value: "yes"
          - name: SD_BACKEND
            value: docker
          - name: DD_PROCESS_AGENT_ENABLED
            value: "true"
          # Uncomment this variable if the agent has issues reaching kubelet
          # - name: KUBERNETES_KUBELET_HOST
          #   valueFrom:
          #     fieldRef:
          #       fieldPath: status.hostIP  # Kubernetes >= 1.7
          #       # or
          #       # fieldPath: spec.nodeName  # Kubernetes < 1.7
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          #--------------------------------------------------------------------------------
          # Mount API server client certificate and CA files as secrets
          #--------------------------------------------------------------------------------
          - name: k8s-certs
            mountPath:  {{ DD_AGENT_CERT_MOUNT_PATH }}
            readOnly:   true
          #--------------------------------------------------------------------------------
          # Mount API server client certificate and CA files as secrets
          #--------------------------------------------------------------------------------
          - name: dd-agent-config
            #--------------------------------------------------------------------------------
            # Does not work causing CrashLoopBackOff status to dd-agent pods.
            #--------------------------------------------------------------------------------
            #mountPath: /etc/dd-agent/conf.d
            mountPath:  /conf.d     # somehow it goes to /etc/dd-agent/conf.d
            #--------------------------------------------------------------------------------
            readOnly: true
        #lifecycle:
        #  postStart:
        #    exec:
        #      command: ["/bin/bash", "-c", "sleep 10 && /etc/init.d/datadog-agent info -v"]
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        #--------------------------------------------------------------------------------
        # API server client certificate and CA files as secrets
        #--------------------------------------------------------------------------------
        - name: k8s-certs
          secret:
            secretName:  k8s-certs
            defaultMode: 448     # 0700 as JSON does not support octal

        #--------------------------------------------------------------------------------
        # /etc/dd-agent/conf.d/kubernetes.yaml for further monitoring.
        # https://gist.github.com/CharlyF/dd481c3ed4fe38e2e47b4ccd85328032
        #--------------------------------------------------------------------------------
        - name: dd-agent-config
          configMap:
            name: dd-agent-config
            items:
            - key: kubernetes-config
              path: kubernetes.yaml
