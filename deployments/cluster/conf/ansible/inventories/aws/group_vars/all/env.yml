#-------------------------------------------------------------------------------
# Environment common/defaults.
# Override with environment specifics in an inventory directory files.
#-------------------------------------------------------------------------------
ENV_ID: aws

#-------------------------------------------------------------------------------
# Distribution
# k8s: from kubernetes project
# oso: from OpenShift origin
# ose: from Redhat OpenShift Enterprise
#-------------------------------------------------------------------------------
DISTRIBUTION_K8S: k8s
DISTRIBUTION_OSO: oso
DISTRIBUTION_OSE: ose

DISTRIBUTION: "{{ DISTRIBUTION_K8S }}"

#-------------------------------------------------------------------------------
# K8S
# [K8S_CLUSTER_NAME]
# For kubeadm created cluster, it is "kubernetes". Check with kubectl config view.
# See https://github.com/kubernetes/kubeadm/issues/416
#
# [AWS Cloud Provider]
# For cluoud provider to work with AWS, insstances and SG need to be tagged with
# KubernetesCluster={{ K8S_CLUSTER_NAME }}.
# See https://docs.google.com/document/d/17d4qinC_HnIwrK0GHnRlD1FKkTNdN__VO4TH9-EzbIY
#-------------------------------------------------------------------------------
K8S_CLUSTER_NAME:     "kubernetes"
K8S_MASTER_HOSTNAME:  "ip-172-31-4-117.us-west-1.compute.internal"
K8S_MASTER_NODE_IP:   "172.31.4.117"

#-------------------------------------------------------------------------------
# Cloud Provider
#-------------------------------------------------------------------------------
CLOUD_PROVIDER_AWS: aws
CLOUD_PROVIDER_GCE: gce
CLOUD_PROVIDER_AZURE: azure

#CLOUD_PROVIDER_AWS: none
K8S_CLOUD_PROVIDER: "{{ CLOUD_PROVIDER_AWS }}"

#-------------------------------------------------------------------------------
# CNI
#-------------------------------------------------------------------------------
K8S_SERVICE_ADDRESSES: "10.244.0.0/16"

#-------------------------------------------------------------------------------
# API Server
#-------------------------------------------------------------------------------
APISERVER_HOST: "{{ K8S_MASTER_HOSTNAME }}"
APISERVER_PROTOCOL: "https"
APISERVER_PORT: 6443
APISERVER_HELATH_ENDPOINT: "healthz"

# --apiserver-advertise-address=192.168.99.10 is because the default gateway is NAT and its IP address is not reachable from other VM nodes.
APISERVER_ADVERTISE_ADDRESS: "{{ K8S_MASTER_NODE_IP }}"

#-------------------------------------------------------------------------------
# Etcd
#-------------------------------------------------------------------------------
#ETCD_HOST: "{{ K8S_MASTER_HOSTNAME }}"
# ETCD (K8S 1.9) binds on localhost I/F only.
ETCD_HOST: "localhost"
ETCD_PROTOCOL: "http"
ETCD_PORT: 2379
ETCD_HELATH_ENDPOINT: "health"

#-------------------------------------------------------------------------------
# Kubelet
#-------------------------------------------------------------------------------
KUBELET_PROTOCOL: "https"
KUBELET_PORT: 10250
KUBELET_HEALTH_ENDPOINT: "healthz"

#-------------------------------------------------------------------------------
# cAdvisor
#-------------------------------------------------------------------------------
CADVISOR_PORT: 4194

#-------------------------------------------------------------------------------
# Kubectl proxy
#-------------------------------------------------------------------------------
KUBEPROXY_ACCEPT_HOSTS: "localhost,172.31.4.117,172.31.4.61,172.31.1.43"


#-------------------------------------------------------------------------------
# Elasticsearch
#-------------------------------------------------------------------------------
# FLUENT_ELASTICSEARCH_HOST
ES_HOST: vpc-k8s-es-glvzy64zbx5mlcu4s5xcrot3jm.us-west-1.es.amazonaws.com
#FLUENT_ELASTICSEARCH_PORT
ES_PORT: 443
# FLUENT_ELASTICSEARCH_SCHEME
ES_PROTOCOL: https
# FLUENT_ELASTICSEARCH_USER
ES_USER:
# FLUENT_ELASTICSEARCH_PASSWORD
ES_PASSWORD:
ES_HEALTH_ENDPOINT: TBD


#-------------------------------------------------------------------------------
# Health endpoints
#-------------------------------------------------------------------------------
endpoints:
  apiserver:
    protocol:       "{{ APISERVER_PROTOCOL }}"
    host:           "{{ ansible_fqdn }}"
    port:           "{{ APISERVER_PORT }}"
    path:           "{{ APISERVER_HELATH_ENDPOINT }}"
    http_code:      200
    content_match:  "^ok$"
    ca_certs:       "{{ APISERVER_CA_CRT }}"
    client_cert:    "{{ APISERVER_CLIENT_CRT }}"
    client_key:     "{{ APISERVER_CLIENT_KEY }}"
  etcd:
    protocol:       "{{ ETCD_PROTOCOL }}"
    host:           "{{ ETCD_HOST }}"
    port:           "{{ ETCD_PORT }}"
    path:           "{{ ETCD_HELATH_ENDPOINT }}"
    http_code:      200
    content_match:  '^\{"health": "true"\}$'
    ca_certs:       "{{ ETCD_CA_CRT }}"
    client_cert:    "{{ ETCD_CLIENT_CRT }}"
    client_key:     "{{ ETCD_CLIENT_KEY }}"
  kubelet:
    protocol:       "{{ KUBELET_PROTOCOL }}"
    host:           "{{ ansible_fqdn }}"
    port:           "{{ KUBELET_PORT }}"
    path:           "{{ KUBELET_HEALTH_ENDPOINT }}"
    http_code:      200
    content_match:  '^ok$'
    ca_certs:       "{{ KUBELET_CA_CRT }}"
    client_cert:    "{{ KUBELET_CLIENT_CRT }}"
    client_key:     "{{ KUBELET_CLIENT_KEY }}"
