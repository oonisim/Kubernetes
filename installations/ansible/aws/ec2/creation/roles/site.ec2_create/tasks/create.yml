- name: Set EC2 for Master
  set_fact:
    ec2_ami_id        : "{{ ec2_ami_id_master }}"
    ec2_instance_type : "{{ ec2_instance_type_master }}"
    ec2_volumes       : "{{ ec2_volumes_master }}"
    server_count      : "{{ server_count_master }}"
  when: NODE_TYPE == NODE_TYPE_MASTER

- name: Set EC2 for Worker
  set_fact:
    ec2_ami_id        : "{{ ec2_ami_id_worker }}"
    ec2_instance_type : "{{ ec2_instance_type_worker }}"
    ec2_volumes       : "{{ ec2_volumes_worker }}"
    server_count      : "{{ server_count_worker }}"
  when: NODE_TYPE == NODE_TYPE_WORKER

- name: "Create {{ server_count }} instances for {{ NODE_TYPE }}"
  ec2:
    region:          "{{ ec2_region }}"
    zone:            "{{ ec2_zone }}"
    image:           "{{ ec2_ami_id }}"
    group:           "{{ ec2_security_group }}"
    instance_type:   "{{ ec2_instance_type }}"
    count:           "{{ server_count }}"
    volumes:         "{{ ec2_volumes }}"
    ec2_access_key:  "{{ ec2_access_key }}"
    ec2_secret_key:  "{{ ec2_secret_key }}"
    key_name:        "{{ ec2_key_name }}"
    wait: true
  register: ec2

- name: Debug
  debug:
    msg: "{{ item.1 }}"
  with_indexed_items: "{{ ec2.instance_ids }}"

- name: Tag instancess
  ec2_tag:
    region:           "{{ ec2_region }}"
    resource:         "{{ item[1] }}"
    tags:
      Name:           "{{ ENV_ID }}_{{ NODE_TYPE }}{{ '%02d'|format(item[0]|int) }}"
      type:           "{{ NODE_TYPE }}"
      environment:    "{{ ENV_ID }}"
    aws_access_key:   "{{ ec2_access_key }}"
    aws_secret_key:   "{{ ec2_secret_key }}"
  with_indexed_items: "{{ ec2.instance_ids }}"

- name: Wait for the instance to come up
  wait_for:
    delay:   5
    host:    "{{ item.public_ip }}"
    port:    22
    state:   started
    timeout: 300
  with_items: "{{ ec2.instances }}"

- name: Allocating elastic IP
  ec2_eip:
    device_id:        "{{ item }}"
    region:           "{{ ec2_region }}"
    in_vpc:           yes
    state:            present
    aws_access_key:   "{{ ec2_access_key }}"
    aws_secret_key:   "{{ ec2_secret_key }}"
    reuse_existing_ip_allowed: yes
  with_items: "{{ ec2.instance_ids }}"
  register: eip

#- debug:
#    msg: "{{ eip }}"

- name: Wait for the instance to come up
  wait_for:
    delay:   5
    host:    "{{ item.public_ip }}"
    port:    22
    state:   started
    timeout: 300
  with_items: "{{ eip.results }}"

#- name: Add new instance to group
#  local_action:
#    module:              add_host
#    groups:              "{{ NODE_TYPE }}"
#    name:                "{{ item.public_ip_address }}"
#    ec2_private_ip:      "{{ item.private_ip_address }}"
#    ec2_private_dns_name: "{{ item.public_dns_name }}"
#    ec2_public_ip:       "{{ item.public_ip_address }}"
#    ec2_public_dns_name: "{{ item.public_dns_name }}"
#  when: 'item.id in ec2.instance_ids'
#  with_items: "{{ ec2_list.instances }}"
#  register: ec2_groups
