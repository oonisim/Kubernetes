init_config:
  # Initialization retries
  #
  # if the agent is expected to start before Kubelet,
  # use these settings to configure the retry policy.
  #
  # init_retry_interval defines how long (in seconds) the kubelet client
  # will wait before retrying initialization.
  # Defaults to 0.
  #
  # init_retry_interval: 20
  #
  # init_retries configures how many retries are made before failing permanently.
  # Defaults to 0.
  #
  # init_retries: 5

instances:
  - port: 4194
    api_server_url: https://172.31.0.16:6443
    apiserver_client_crt: /etc/kubernetes/pki/ca.crt
    apiserver_client_key: /etc/kubernetes/pki/ca.key
    kubelet_client_crt: /etc/kubernetes/pki/apiserver-kubelet-client.crt
    kubelet_client_key: /etc/kubernetes/pki/apiserver-kubelet-client.key
    apiserver_ca_cert: apiserver.crt
    kubelet_cert: apiserver.crt
    kubelet_tls_verify: false

  # collect_events controls whether the agent should fetch events from
  # the kubernetes API and ingest them in Datadog.
  # To avoid duplicates, only one agent at a time across the entire
  # cluster should have this feature enabled.
  # If this is difficult to achieve in your deployment, see the following
  # Leader election section.
  # To enable the feature, set the parameter to `true`.
  #
  # collect_events: false

  # Leader election
  #
  # Agents can perform leader election among themselves.
  # The leader agent will collect events from the apiserver
  # even if collect_events is false.
  # To perform the election it needs get, list, delete, create, and update
  # rights on ConfigMaps (this can be configured with a Cluster Role).
  # This makes sure we don't overload the apiserver with redundant
  # queries coming from every agent.
  # Default is false.
  #
  # leader_candidate: true
  #
  # lease duration is the duration for which a leader is elected.
  # It should be at least twice the check run period (15s by default)
  # When modifying this setting, keep in mind that the shorter
  # the lease duration, the more often agents will query the apiserver
  # Default is 5 minutes.
  #
  # leader_lease_duration: 600

  # Matching the pods to Kubernetes services requires to retrieve events regularly.
  # To reduce the traffic to the apiserver, we only query them every 5 minutes, adding a delay
  # in pod -> service matching. You can configure it below (in seconds) or disable kube_service
  # tagging completely
  #
  # collect_service_tags: true
  # service_tag_update_freq: 300
  #
  # The namespaces for which events should be collected.
  # If not modified, the 'default' namespace will be used.
  #
  # namespaces:
  #  - default

  # The regexp used to select namespaces for which events should be collected.
  # The matched namespaces will be added to the "namespaces" list.
  # If empty, regexp selection will be ignored.
  #
  # namespace_name_regexp:

  # Node labels that should be collected and their name in host tags. Off by default.
  # Some of these labels are redundant with metadata collected by
  # cloud provider crawlers (AWS, GCE, Azure)
  #
  # node_labels_to_host_tags:
  #   kubernetes.io/hostname: nodename
  #   beta.kubernetes.io/os: os

  # use_histogram controls whether we send detailed metrics, i.e. one per container.
  # When false, we send detailed metrics corresponding to individual containers, tagging by container id
  # to keep them unique.
  # When true, we aggregate data based on container image.
  #
  # use_histogram: false
  #
  # We can define a whitelist of patterns that permit publishing raw metrics.
  # enabled_rates:
  #   - cpu.*
  #   - network.*
  #
  # enabled_gauges:
  #   - filesystem.*
  #
  # Prefix to use when converting pod labels to metric tags, can be made empty with ""
  # label_to_tag_prefix: "kube_"
  #
  # Custom tags that should be applied to kubernetes metrics
  # tags:
  #   - optional_tag1
  #   - optional_tag2